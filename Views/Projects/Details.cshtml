@model SEPMTool.Models.ViewModels.ProjectDetailsViewModel

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-11 col-xl-10">

            @*

                PROJECT INFORMATION

            *@
            <div class="page-header">
                <h1>{{this.projectModel.project.name}}</h1>
                <p class="lead">{{this.projectModel.project.description}}</p>
                <div class="d-flex align-items-center">
                    <ul class="avatars">
                        <li v-for="user in this.projectModel.project.users">
                            <a href="#" data-toggle="tooltip" data-placement="top" :title="user.username">
                                <img alt="user.username" class="avatar" src="~/assets/img/defaultUserIcon.jpg" />
                            </a>
                        </li>
                    </ul>
                    <button class="btn btn-round" data-toggle="modal" data-target="#user-manage-modal">
                        <i class="material-icons">add</i>
                    </button>
                </div>
                <div>
                    <div class="progress">
                        <div class="progress-bar bg-success" style="width:25%;"></div>
                    </div>
                    <div class="d-flex justify-content-between text-small">
                        <div class="d-flex align-items-center">
                            <i class="material-icons">playlist_add_check</i>
                            <span>3/12</span>
                        </div>
                        <span>Due: {{this.projectModel.project.deadline}}</span>
                    </div>
                </div>
            </div>


            @*

                TAB LIST

            *@
            <ul class="nav nav-tabs nav-fill" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="tab" href="#requirements" role="tab" aria-controls="requirements" aria-selected="true">Requirements</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#Kanban" role="tab" aria-controls="requirements" aria-selected="true">Kanban</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#activity" role="tab" aria-controls="awards" aria-selected="false">Activity</a>
                </li>
            </ul>

            <div class="tab-content">


                @*

                    REQUIREMENTS SECTION

                *@
                <div class="tab-pane fade show active" id="requirements" role="tabpanel" data-filter-list="dropzone-previews">
                    <div class="content-list">
                        <div class="row content-list-head">
                            <div class="col-auto">
                                <h3>Requirements</h3>

                            </div>
                            <form class="col-md-auto">
                                <div class="input-group input-group-round">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="material-icons">filter_list</i>
                                        </span>
                                    </div>
                                    <input type="search" class="form-control filter-list-input" placeholder="Filter files" aria-label="Filter Tasks">
                                </div>
                            </form>
                        </div>
                        <!--end of content list head-->
                        <div class="content-list-body row" v-for="(req, index) in this.projectModel.project.projectRequirements">
                            <div class="col">
                                <ul class="list-group list-group-activity dropzone-previews flex-column-reverse">
                                    <li class="list-group-item-requirements">
                                        <div class="media align-items-center">
                                            <div class="media-body d-flex justify-content-between align-items-center">
                                                <div>
                                                    <h6><a href="#" data-filter-by="text">{{req.name}}</a></h6>
                                                    <span class="text-small" data-filter-by="text">{{req.description}}</span>
                                                    <br />
                                                    <span class="badge badge-secondary" data-toggle="tooltip" data-placement="bottom" title="Category">{{req.category}}</span>
                                                    <span class="badge badge-warning" data-toggle="tooltip" data-placement="bottom" title="Priority">{{req.priority}}</span>
                                                </div>
                                                <div class="dropdown">
                                                    <button class="btn-options" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="material-icons">more_vert</i>
                                                    </button>
                                                    <div class="dropdown-menu dropdown-menu-right">
                                                        <a class="dropdown-item" href="#">Download</a>
                                                        <a class="dropdown-item" href="#">Share</a>
                                                        <div class="dropdown-divider"></div>
                                                        <a class="dropdown-item text-danger" href="#">Delete</a>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <hr />
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span>
                                                <span class="h6-requirement align-self-center">Requirement Tasks </span>
                                                <a id="showRequirements" class="button_style" @@click="ShowTasks(req.id)" onmouseover="" style="cursor: pointer;"><i :id="`chevron-${req.id}`" class="fas fa-chevron-circle-down align-items-center rotate"></i></a>
                                            </span>

                                            <button class="btn btn-primary" v-on:click="OpenModal(req.id, index)">
                                                Add Task
                                            </button>
                                        </div>
                                        <transition name="slide">
                                            <div class="card-list-body child">
                                                <div :id="`accordion-${req.id}`" style="display:none">
                                                    <div class="card card-task requirements-card" v-for="(task, taskIndex) in req.tasks">
                                                        <div class="progress" style="height:5px">

                                                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 75%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                                        </div>
                                                        <a data-toggle="collapse" :data-target="`#collapse-${task.id}`" aria-expanded="true" aria-controls="collapseOne" onmouseover="" style="cursor: pointer;">
                                                            <div class="card-header-requirements">
                                                                {{task.name}}
                                                            </div>
                                                        </a>
                                                        <div :id="`collapse-${task.id}`" class="collapse" aria-labelledby="headingOne" :data-parent="`#accordion-${req.id}`">
                                                            <div class="card-body">
                                                                <div class="card-title" style="max-width: 60%">
                                                                    <span class="text-small">{{task.description}}</span>
                                                                    <br />
                                                                    <span class="badge badge-success" data-toggle="tooltip" data-placement="bottom" title="Requirement link">{{req.name}}</span>
                                                                </div>
                                                                <div class="card-meta">
                                                                    <ul class="avatars">
                                                                        <li v-for="user in task.users">
                                                                            <a href="#" data-toggle="tooltip" :title="user.username">
                                                                                <img :alt="user.username" class="avatar" src="~/assets/img/defaultUserIcon.jpg" />
                                                                            </a>
                                                                        </li>
                                                                    </ul>
                                                                    <div class="d-flex align-items-center">
                                                                        <i class="material-icons">playlist_add_check</i>
                                                                        <span>3/4</span>
                                                                    </div>
                                                                    <div class="dropdown card-options">
                                                                        <button class="btn-options" type="button" id="task-dropdown-button-1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                            <i class="material-icons">more_vert</i>
                                                                        </button>
                                                                        <div class="dropdown-menu dropdown-menu-right">
                                                                            <button class="dropdown-item text-danger" type="button" v-on:click="EditTask(task, taskIndex, index)">Edit</button>
                                                                            <div class="dropdown-divider"></div>
                                                                            <button class="dropdown-item text-danger" type="button" v-on:click="DeleteTask(task.id, taskIndex, index)">Delete</button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <hr />
                                                            <div class="card-subtasks">
                                                                <span>
                                                                    <span class="h6-requirement align-self-center">Sub-Tasks</span>
                                                                    <a id="showRequirements" class="button_style" @@click="ShowSubTasks(task.id)" onmouseover="" style="cursor: pointer;"><i :id="`chevron-${task.id}`" class="fas fa-chevron-circle-down align-items-center rotate"></i></a>
                                                                </span>
                                                                <div :id="`accordion-${task.id}`" style="display:none">
                                                                    <div v-for="(subtask, index) in task.subTasks">
                                                                        <input type="checkbox" :value="subtask.description" />
                                                                        {{subtask.description}}
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </transition>

                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <!--end of content list-->
                </div>


                @*

                    KANBAN SECTION

                *@
                <div class="tab-pane fade" id="Kanban" role="tabpanel" data-filter-list="dropzone-previews">
                    <div class="row mt-3">
                        <div class="col-md-3">
                            <div class="p-2 alert alert-secondary" onmouseover="" style="cursor: pointer;">
                                <h5>Backlog</h5>
                                <draggable class="list-group kanban-column" :list="arrBacklog" :options="{animation:200, group:'tasks'}" @@add="onAdd($event, 0)">
                                    <div class="card card-kanban" v-for="(task, index) in arrBacklog" :key="task.id" :data-id="task.id">
                                        <div class="progress">
                                            <div class="progress-bar bg-success" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <div class="card-body">
                                            <div class="dropdown card-options">
                                                <button class="btn-options" type="button" id="kanban-dropdown-button-14" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="material-icons">more_vert</i>
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a class="dropdown-item" href="#">Edit</a>
                                                    <a class="dropdown-item text-danger" href="#">Archive Card</a>
                                                </div>
                                            </div>
                                            <div class="card-title">
                                                <a href="#" data-toggle="modal" data-target="#task-modal">
                                                    {{ task.name }}
                                                </a>
                                            </div>

                                            <ul class="avatars">
                                                <li v-for="user in task.users">
                                                    <a href="#" data-toggle="tooltip" :title="user.username">
                                                        <img :alt="user.username" class="avatar" src="~/assets/img/defaultUserIcon.jpg" />
                                                    </a>
                                                </li>
                                            </ul>

                                            <div class="card-meta d-flex justify-content-between">
                                                <span><b-badge pill variant="success" data-toggle="tooltip" data-placement="bottom" title="Task Priority">Priority?</b-badge></span>
                                                <div class="d-flex align-items-center">
                                                    <i class="material-icons">playlist_add_check</i>
                                                    <span>{{ task.subTasks.length }}</span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </draggable>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="p-2 alert alert-secondary" onmouseover="" style="cursor: pointer;">
                                <h5>In Progress</h5>
                                <draggable class="list-group kanban-column" :list="arrInProgress" :options="{animation:200, group:'tasks'}" @@add="onAdd($event, 1)">
                                    <div class="card card-kanban" v-for="task in arrInProgress" :key="task.id" :data-id="task.id" style="border-color: #CCE5FF; border-width: 2px">
                                        <div class="progress">
                                            <div class="progress-bar bg-success" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <div class="card-body">
                                            <div class="dropdown card-options">
                                                <button class="btn-options" type="button" id="kanban-dropdown-button-14" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="material-icons">more_vert</i>
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a class="dropdown-item" href="#">Edit</a>
                                                    <a class="dropdown-item text-danger" href="#">Archive Card</a>
                                                </div>
                                            </div>
                                            <div class="card-title">
                                                <a href="#" data-toggle="modal" data-target="#task-modal">
                                                    {{ task.name }}
                                                </a>
                                            </div>

                                            <ul class="avatars">
                                                <li v-for="user in task.users">
                                                    <a href="#" data-toggle="tooltip" :title="user.username">
                                                        <img :alt="user.username" class="avatar" src="~/assets/img/defaultUserIcon.jpg" />
                                                    </a>
                                                </li>
                                            </ul>

                                            <div class="card-meta d-flex justify-content-between">
                                                <span><b-badge pill variant="success" data-toggle="tooltip" data-placement="bottom" title="Task Priority">Priority?</b-badge></span>
                                                <div class="d-flex align-items-center">
                                                    <i class="material-icons">playlist_add_check</i>
                                                    <span>{{ task.subTasks.length }}</span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </draggable>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="p-2 alert alert alert-secondary" onmouseover="" style="cursor: pointer;">
                                <h5>Testing</h5>
                                <draggable class="list-group kanban-column" :list="arrTested" :options="{animation:200, group:'tasks'}" @@add="onAdd($event, 2)">
                                    <div class="card card-kanban" v-for="task in arrTested" :key="task.id" :data-id="task.id" style="border-color: #FFF3CD; border-width: 2px">
                                        <div class="progress">
                                            <div class="progress-bar bg-success" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <div class="card-body">
                                            <div class="dropdown card-options">
                                                <button class="btn-options" type="button" id="kanban-dropdown-button-14" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="material-icons">more_vert</i>
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a class="dropdown-item" href="#">Edit</a>
                                                    <a class="dropdown-item text-danger" href="#">Archive Card</a>
                                                </div>
                                            </div>
                                            <div class="card-title">
                                                <a href="#" data-toggle="modal" data-target="#task-modal">
                                                    {{ task.name }}
                                                </a>
                                            </div>

                                            <ul class="avatars">
                                                <li v-for="user in task.users">
                                                    <a href="#" data-toggle="tooltip" :title="user.username">
                                                        <img :alt="user.username" class="avatar" src="~/assets/img/defaultUserIcon.jpg" />
                                                    </a>
                                                </li>
                                            </ul>

                                            <div class="card-meta d-flex justify-content-between">
                                                <span><b-badge pill variant="success" data-toggle="tooltip" data-placement="bottom" title="Task Priority">Priority?</b-badge></span>
                                                <div class="d-flex align-items-center">
                                                    <i class="material-icons">playlist_add_check</i>
                                                    <span>{{ task.subTasks.length }}</span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </draggable>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="p-2 alert alert-secondary" onmouseover="" style="cursor: pointer;">
                                <h5>Done</h5>
                                <draggable class="list-group kanban-column" :list="arrDone" :options="{animation:200, group:'tasks'}" @@add="onAdd($event, 3)">
                                    <div class="card card-kanban" v-for="task in arrDone" :key="task.id" :data-id="task.id" style="border-color: #D4EDDA; border-width: 2px;">
                                        <div class="progress">
                                            <div class="progress-bar bg-success" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <div class="card-body">
                                            <div class="dropdown card-options">
                                                <button class="btn-options" type="button" id="kanban-dropdown-button-14" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="material-icons">more_vert</i>
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a class="dropdown-item" href="#">Edit</a>
                                                    <a class="dropdown-item text-danger" href="#">Archive Card</a>
                                                </div>
                                            </div>
                                            <div class="card-title">
                                                <a href="#" data-toggle="modal" data-target="#task-modal">
                                                    {{ task.name }}
                                                </a>
                                            </div>

                                            <ul class="avatars">
                                                <li v-for="user in task.users">
                                                    <a href="#" data-toggle="tooltip" :title="user.username">
                                                        <img :alt="user.username" class="avatar" src="~/assets/img/defaultUserIcon.jpg" />
                                                    </a>
                                                </li>
                                            </ul>

                                            <div class="card-meta d-flex justify-content-between">
                                                <span><b-badge pill variant="success" data-toggle="tooltip" data-placement="bottom" title="Task Priority">Priority?</b-badge></span>
                                                <div class="d-flex align-items-center">
                                                    <i class="material-icons">playlist_add_check</i>
                                                    <span>{{ task.subTasks.length }}</span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </draggable>
                            </div>
                        </div>
                    </div>

                </div>


                @*

                    ACTIVITY SECTION

                *@
                <div class="tab-pane fade" id="activity" role="tabpanel" data-filter-list="list-group-activity">
                    <div class="content-list">
                        <div class="row content-list-head">
                            <div class="col-auto">
                                <h3>Activity</h3>
                            </div>
                        </div>
                        <div class="content-list-body">
                            <ol class="list-group list-group-activity">
                                <li class="list-group-item" v-for="(update, index) in this.projectModel.project.updates.slice().reverse()">
                                    <div class="media align-items-center">
                                        <div class="avatars">
                                            <div class="avatar bg-primary">
                                                <i class="material-icons" v-if="update.type === 0">emoji_events</i>
                                            </div>
                                        </div>
                                        <div class="media-body">
                                            <div>
                                                <span class="h6" data-filter-by="text">{{update.title}}</span>
                                                <div>
                                                    <span data-filter-by="text">{{update.description}}</span>
                                                </div>                                                
                                            </div>
                                            <span class="text-small" data-filter-by="text">{{ update.date | moment("Do MMMM, h:mmA") }}</span>
                                        </div>
                                    </div>
                                </li>                               
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @*

        ADD USERS MODAL

    *@
    <form asp-action="AddUsers" class="modal fade" id="user-manage-modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Project Users</h5>
                    <button type="button" class="close btn btn-round" data-dismiss="modal" aria-label="Close">
                        <i class="material-icons">close</i>
                    </button>
                </div>
                <!--end of modal head-->
                <div class="modal-body">
                    <div class="users-manage" data-filter-list="form-group-users">
                        <div class="mb-3">
                            <ul class="avatars text-center">
                                @foreach (var user in Model.Project.Users)
                                {
                                <li>
                                    <img alt="@user.Username" src="~/assets/img/defaultUserIcon.jpg" class="avatar" data-toggle="tooltip" data-title="@user.Username" />
                                </li>
                                }
                            </ul>
                        </div>
                        <div class="input-group input-group-round">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="material-icons">filter_list</i>
                                </span>
                            </div>
                            <input type="search" class="form-control filter-list-input" placeholder="Filter members" aria-label="Filter Members">
                        </div>
                        <div class="form-group-users">
                            @for (int i = 0; i < Model.AllUsers.Count; i++)
                            {
                            <div class="custom-control custom-checkbox">
                                <input asp-for="ProjectId" value="@Model.Project.Id" class="form-control col" type="hidden" placeholder="Task name" />
                                <input asp-for="@Model.AllUsers[i].IsSelected" type="checkbox" class="custom-control-input">
                                <label asp-for="@Model.AllUsers[i].IsSelected" class="custom-control-label">
                                    <span class="d-flex align-items-center">
                                        <img alt="@Model.AllUsers[i].Username" src="~/assets/img/defaultUserIcon.jpg" class="avatar mr-2" />
                                        <span class="h6 mb-0" data-filter-by="text">@Model.AllUsers[i].Username</span>
                                    </span>
                                </label>
                                <input asp-for="@Model.AllUsers[i].UserId" type="hidden" />
                                <input asp-for="@Model.AllUsers[i].Username" type="hidden" />
                            </div>
                            }
                        </div>
                    </div>
                </div>
                <!--end of modal body-->
                <div class="modal-footer">
                    <button role="button" class="btn btn-primary" type="submit">
                        Done
                    </button>
                </div>
            </div>
        </div>
    </form>


    @*

        NEW TASK MODAL

    *@
    <form class="modal fade" id="task-add-modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{this.modalTitle}}</h5>
                    <button type="button" class="close btn btn-round" data-dismiss="modal" aria-label="Close">
                        <i class="material-icons">close</i>
                    </button>
                </div>
                <!--end of modal head-->
                <ul class="nav nav-tabs nav-fill" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="task-add-details-tab" data-toggle="tab" href="#task-add-details" role="tab" aria-controls="task-add-details" aria-selected="true">Details</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="task-add-members-tab" data-toggle="tab" href="#task-add-members" role="tab" aria-controls="task-add-members" aria-selected="false">Members</a>
                    </li>
                </ul>
                <div class="modal-body">
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="task-add-details" role="tabpanel">
                            <h6>General Details</h6>
                            @*<input asp-for="ProjectId" value="@Model.Project.Id" class="form-control col" type="hidden" placeholder="Task name" />*@
                            <div class="form-group row align-items-center">
                                <label class="col-3">Name</label>
                                <input v-model="taskModel.name" class="form-control col" type="text" placeholder="Task name" />
                            </div>
                            <div class="form-group row align-items-center">
                                <label class="col-3">Description</label>
                                <textarea v-model="taskModel.description" class="form-control col" rows="3" placeholder="Task description"></textarea>
                            </div>
                            <div>
                                <hr>
                                <h6>Sub-tasks</h6>
                                <div class="input-group mb-3">
                                    <input v-model="subTask.description" type="text" class="form-control" placeholder="Enter a sub-task..." aria-describedby="button-addon2">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-primary" type="button" id="button-addon2" v-on:click="AddSubTask">Add</button>
                                    </div>
                                </div>
                                <ul class="list-group">

                                    <li v-for="(subTask, index) in taskModel.subTasks" class="list-group-item">
                                        <span class="text-primary">{{index+1}}</span>
                                        {{subTask.description}}
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="task-add-members" role="tabpanel">
                            <div class="users-manage" data-filter-list="form-group-users">
                                <div class="mb-3">
                                    <ul class="avatars text-center">
                                        <li v-for="user in this.projectModel.project.users">
                                            <img :alt="user.username" src="~/assets/img/defaultUserIcon.jpg" class="avatar" data-toggle="tooltip" :data-title="user.username" />
                                        </li>
                                    </ul>
                                </div>
                                <div class="input-group input-group-round">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="material-icons">filter_list</i>
                                        </span>
                                    </div>
                                    <input type="search" class="form-control filter-list-input" placeholder="Filter members" aria-label="Filter Members">
                                </div>
                                <div class="form-group-users">

                                    <div class="custom-control custom-checkbox" v-for="(user, key, index) in projectModel.users" :key="index">
                                        <input type="checkbox" class="custom-control-input" :id="key" user="user.username" v-model="projectModel.users[key].isSelected">
                                        <label :for="key" class="custom-control-label">
                                            <span class="d-flex align-items-center">
                                                <img :alt="user.username" src="~/assets/img/defaultUserIcon.jpg" class="avatar mr-2" />
                                                <span class="h6 mb-0" data-filter-by="text">{{user.username}}</span>
                                            </span>
                                        </label>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--end of modal body-->
                <div class="modal-footer">
                    <button role="button" class="btn btn-primary" type="button" @@click="CreateTask" v-if="this.modalTitle === 'New Task'">
                        Create Task
                    </button>
                    <button role="button" class="btn btn-primary" type="button" @@click="UpdateTask" v-if="this.modalTitle === 'Edit Task'">
                        Update Task
                    </button>
                </div>
            </div>
        </div>
    </form>

</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        vueMixins.push({
            components: {
                draggable
            },
            data: function () {
                return {
                    projectModel: @Json.Serialize(Model),

                    objectIndex: 0,
                    requirementIndex: 0,

                    modalTitle: '',
                    edit: 'false',

                    taskModel: {
                        id: 0,
                        name: '',
                        description: '',
                        projectRequirementId: this.requirementId,
                        projectRequirementIndex: '',
                        subTasks: [],
                        users: []
                    },

                    subTask: {
                        description: '',
                        isCompleted: false,
                        //projectTaskId: '',
                    },
                    user: {
                        userId: '',
                        username: '',
                        isSelected: false,
                    },
                    arrBacklog: [],
                    arrInProgress: [],
                    arrTested: [],
                    arrDone: []
                }
            },
            methods: {
                moment: function () {
                    return moment();
                },
                onAdd: function (event, status) {

                    let id = event.item.getAttribute('data-id');

                    axios({
                        method: 'patch',
                        url: '/Projects/KanbanMoveItem',
                        data: {
                            Status: status,
                            TaskId: id
                        }
                    });
                },
                OpenModal: function (requirementId, index) {

                    this.taskModel.id = 0;
                    this.taskModel.name = '';
                    this.taskModel.description = '';
                    this.taskModel.projectRequirementId = requirementId;
                    this.taskModel.projectRequirementIndex = index;
                    this.taskModel.subTasks = [];
                    this.taskModel.users = [];

                    this.modalTitle = 'New Task';

                    $('#task-add-modal').modal('show');

                },
                ShowTasks: function (requirementId) {

                    const chevron = "#chevron-" + requirementId;
                    const accordion = "#accordion-" + requirementId;

                    console.log(this.projectModel);
                    $(chevron).toggleClass("down");
                    $(accordion).toggle("slow");
                },
                ShowSubTasks: function (taskId) {

                    const chevron = "#chevron-" + taskId;
                    const accordion = "#accordion-" + taskId;

                    console.log(this.projectModel);
                    $(chevron).toggleClass("down");
                    $(accordion).toggle("slow");
                },
                AddSubTask: function () {
                    const clone = Object.assign({}, this.subTask)
                    this.taskModel.subTasks.push(clone);
                    this.subTask = {
                        title: '',
                        completed: false,
                    };
                },
                CreateTask() {
                    console.log(this.projectModel);
                    this.loading = true;
                    $('#task-add-modal').modal('hide');
                    axios({
                        method: 'post',
                        url: '/Projects/CreateTask',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        data: {
                        projectId: this.projectModel.project.id,
                        requirementId: this.taskModel.projectRequirementId,
                        taskName: this.taskModel.name,
                        taskDescription: this.taskModel.description,
                        subTasks: this.taskModel.subTasks,
                        users: this.projectModel.users
                        }
                    })
                        .then(res => {
                            console.log(res.data);
                            this.projectModel.project.projectRequirements[this.taskModel.projectRequirementIndex].tasks.push(res.data);
                            this.UpdateKanban(res.data);
                            this.ShowTasks(res.data.projectRequirementId);
                        })
                        .catch(err => {
                            console.log(err.message);
                        })
                        .then(() => {
                            this.loading = false;
                        });
                },
                EditTask(task, taskIndex, reqIndex) {
                    this.objectIndex = taskIndex;
                    this.requirementIndex = reqIndex;
                    console.log(reqIndex);
                    this.taskModel = {
                        id: task.id,
                        name: task.name,
                        description: task.description,
                        subTasks: task.subTasks,
                        users: task.users
                    }
                    this.modalTitle = 'Edit Task';
                    $('#task-add-modal').modal('show');
                },
                UpdateTask() {
                    console.log(this.projectModel);
                    this.loading = true;
                    $('#task-add-modal').modal('hide');
                    axios({
                        method: 'post',
                        url: '/Projects/UpdateTask',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        data: {
                        projectId: this.projectModel.project.id,
                        requirementId: this.taskModel.projectRequirementId,
                        taskId: this.taskModel.id,
                        taskName: this.taskModel.name,
                        taskDescription: this.taskModel.description,
                        subTasks: this.taskModel.subTasks,
                        users: this.projectModel.users
                        }
                    })
                        .then(res => {
                            console.log(res.data);
                            console.log("req" + this.reqIndex);
                            console.log("obj" + this.objectIndex);

                            this.projectModel.project.projectRequirements[this.requirementIndex].tasks.splice(this.objectIndex, 1, res.data);
                            this.RenderKanban();
                        })
                        .catch(err => {
                            console.log(err.message);
                        })
                        .then(() => {
                            this.loading = false;
                        });
                },
                DeleteTask(id, taskIndex, reqIndex) {
                    console.log(taskIndex);
                    console.log(reqIndex);
                    console.log(id);
                    this.loading = true;
                    axios.delete('/Projects/DeleteTask/', {
                        params: {
                            taskId: id,
                            projectId: this.projectModel.project.id
                        }
                    })
                        .then(res => {
                            console.log(res);
                            this.projectModel.project.projectRequirements[reqIndex].tasks.splice(taskIndex, 1);
                            this.RenderKanban();
                        })
                        .catch(err => {
                            console.log(err.message);
                        })
                        .then(() => {
                            this.loading = false;
                        });
                },
                RenderKanban: function () {

                    this.arrBacklog = [];
                    this.arrInProgress = [];
                    this.arrTested = [];
                    this.arrDone = [];

                    this.projectModel.project.projectRequirements.forEach(requirement => {
                    requirement.tasks.forEach(task => {
                        switch (task.status) {
                            case 0:
                                this.arrBacklog.push(task);
                                break;
                            case 1:
                                this.arrInProgress.push(task);
                                break;
                            case 2:
                                this.arrTested.push(task);
                                break;
                            case 3:
                                this.arrDone.push(task);
                                break;
                        }
                    });
                });
                },
                UpdateKanban: function (task) {
                switch (task.status) {
                    case 0:
                        console.log(task);
                        this.arrBacklog.push(task);
                        break;
                    case 1:
                        this.arrInProgress.push(task);
                        break;
                    case 2:
                        this.arrTested.push(task);
                        break;
                    case 3:
                        this.arrDone.push(task);
                        break;
                }
                },
            },
            beforeMount() {
                this.RenderKanban();
            },
        });

    </script>
}
